---
import type { CollectionEntry } from 'astro:content';

interface Props {
	project: CollectionEntry<'work'>;
}

const { data, id } = Astro.props.project;

// Extract video ID from YouTube URL
const getVideoId = (url: string): string | null => {
	const patterns = [
		/(?:youtube\.com\/watch\?v=|youtu\.be\/)([^&\?\/]+)/,
		/youtube\.com\/embed\/([^&\?\/]+)/,
	];

	for (const pattern of patterns) {
		const match = url.match(pattern);
		if (match) return match[1];
	}
	return null;
};

const videoId = data.youtubeUrl ? getVideoId(data.youtubeUrl) : null;
---

<div class="card">
	<span class="title">{data.title}</span>
	{videoId ? (
		<iframe
			src={`https://www.youtube.com/embed/${videoId}`}
			title={data.title}
			frameborder="0"
			allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
			allowfullscreen
			loading="lazy"
		></iframe>
	) : (
		<img src={data.img} alt={data.img_alt || ''} loading="lazy" decoding="async" />
	)}
</div>

<style>
	.card {
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		height: 16rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
		position: relative;
	}

	.card:hover {
		box-shadow: var(--shadow-md);
	}

	.title {
		grid-area: 1 / 1 / 2 / 2;
		z-index: 1;
		margin: 0.5rem;
		padding: 0.5rem 1rem;
		background: rgba(0, 0, 0, 0.8);
		color: var(--gray-200);
		border-radius: 0.375rem;
		backdrop-filter: blur(8px);
	}

	img,
	iframe {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
		border: 0;
	}

	@media (min-width: 50em) {
		.card {
			height: 28rem;
			border-radius: 1.5rem;
		}

		.title {
			border-radius: 0.9375rem;
		}
	}
</style>
